---
source: crates/cli/src/test.rs
expression: content
---
mod models;
mod logic;

pub mod prelude {
    pub use crate::models::*;
    pub use crate::logic::*;
}

use prelude::*;

use indexmap::IndexMap;


use log::{debug, error, info};


use std::env;


use std::path::PathBuf;


fn main() {
    let parser = ArgumentParser::new();
    let config = match parser.parse() {
        Ok(cfg) => cfg,
        Err(e) => {
            error!("Error parsing arguments: {}", e);
            display_help();
            std::process::exit(1);
        }
    };
    if config.verbose {
        debug!("Verbose mode enabled");
    }
    let mut processor = FileProcessor::new();
    for file in &config.input_files {
        match processor.process_file(file) {
            Ok(result) => {
                if config.verbose {
                    debug!("{}", result);
                }
            }
            Err(e) => {
                error!("Error processing {}: {}", file.display(), e);
            }
        }
    }
    info!("Processing complete. Cache size: {}", processor.get_cache_size());
}
